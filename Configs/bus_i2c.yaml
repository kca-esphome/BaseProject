 #VARS::
substitutions:
  bus_i2c_id:   bus_i2c
  bus_i2c_sda:  GPIO21
  bus_i2c_scl:  GPIO22
  bus_i2c_scan: True
  bus_i2c_frequency:  50kHz
  bus_i2c_timeout:    50ms

# Example configuration entry
#
# Configuration variables:
#   sda (Optional, Pin): The pin for the data line of the I²C bus. Defaults to the default of your board 
#           (usually GPIO21 for ESP32 and GPIO4 for ESP8266).
#
#   scl (Optional, Pin): The pin for the clock line of the I²C bus. Defaults to the default of your board 
#           (usually GPIO22 for ESP32 and GPIO5 for ESP8266).
#
#   scan (Optional, boolean): If ESPHome should do a search of the I²C address space on startup. Defaults to true.
#
#   frequency (Optional, float): Set the frequency the I²C bus should operate on. 
#           Defaults to 50kHz. Values are 10kHz, 50kHz, 100kHz, 200kHz, … 800kHz
#
#   timeout (Optional, Time): Set the I²C bus timeout. Defaults to the framework defaults 
#           (100us on esp32 with esp-idf, 50ms on esp32 with Arduino, 1s on esp8266 and 1s on rp2040). Maximum on esp-idf is 13ms.#
#
#   id (Optional, ID): Manually specify the ID for this I²C bus if you need multiple I²C buses.
#
 i2c:
   - id:    ${bus_i2c_id}
     sda:   ${bus_i2c_sda}
     scl:   ${bus_i2c_scl}
     scan:  ${bus_i2c_scan}
     frequency: ${bus_i2c_frequency}
     timeout:   ${bus_i2c_timeout}